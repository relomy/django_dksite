# Generated by Django 2.2.5 on 2019-09-03 19:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DKContest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dk_id', models.CharField(max_length=15, unique=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('sport', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('total_prizes', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('entries', models.PositiveIntegerField(blank=True, null=True)),
                ('entry_fee', models.FloatField(blank=True, null=True)),
                ('positions_paid', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('position', models.CharField(blank=True, max_length=20, null=True)),
                ('dk_position', models.CharField(blank=True, max_length=2, null=True)),
                ('sport', models.CharField(blank=True, max_length=10, null=True)),
                ('team_abbv', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DKResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dk_id', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('rank', models.PositiveIntegerField()),
                ('points', models.FloatField()),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results', to='results.DKContest')),
            ],
        ),
        migrations.CreateModel(
            name='DKSalary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.PositiveIntegerField(blank=True, null=True)),
                ('draft_group_id', models.PositiveIntegerField(blank=True, null=True)),
                ('contest_type_id', models.PositiveIntegerField(blank=True, null=True)),
                ('sport', models.CharField(blank=True, max_length=10, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dk_salaries', to='results.Player')),
            ],
            options={
                'unique_together': {('player', 'draft_group_id')},
            },
        ),
        migrations.CreateModel(
            name='DKContestPayout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upper_rank', models.PositiveIntegerField()),
                ('lower_rank', models.PositiveIntegerField()),
                ('payout', models.DecimalField(decimal_places=2, max_digits=18)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payouts', to='results.DKContest')),
            ],
            options={
                'unique_together': {('contest', 'upper_rank', 'lower_rank')},
            },
        ),
    ]
